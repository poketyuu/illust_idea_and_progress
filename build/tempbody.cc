//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "tempbody.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string tempbody::genText(const DrTemplateData& tempbody_view_data)
{
	drogon::OStringStream tempbody_tmp_stream;
	std::string layoutName{""};
	tempbody_tmp_stream << "<header>\n";
	tempbody_tmp_stream << "<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n";
	tempbody_tmp_stream << "<div class=\"container-fluid\">\n";
	tempbody_tmp_stream << "<a class=\"navbar-brand\" href=\"/\">illust_idea_and_progress</a>\n";
	tempbody_tmp_stream << "<button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n";
	tempbody_tmp_stream << "<span class=\"navbar-toggler-icon\">\n";
	tempbody_tmp_stream << "</button>\n";
	tempbody_tmp_stream << "<div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n";
	tempbody_tmp_stream << "<ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n";
	tempbody_tmp_stream << "<li class=\"nav-item\">\n";
	tempbody_tmp_stream << "<a class=\"nav-link\" aria-current=\"page\" href=\"dojin\">同人誌進捗管理</a>\n";
	tempbody_tmp_stream << "</li>\n";
	tempbody_tmp_stream << "<li class=\"nav-item\">\n";
	tempbody_tmp_stream << "<a class=\"nav-link\" aria-current=\"page\" href=\"hlist\">全体リスト</a>\n";
	tempbody_tmp_stream << "</li>\n";
	tempbody_tmp_stream << "</ul>\n";
	tempbody_tmp_stream << "</div>\n";
	tempbody_tmp_stream << "</div>\n";
	tempbody_tmp_stream << "</nav>\n";
	tempbody_tmp_stream << "</header>\n";
if(layoutName.empty())
{
std::string ret{std::move(tempbody_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = tempbody_view_data;
auto str = std::move(tempbody_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
