//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "IdeaCsp.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string IdeaCsp::genText(const DrTemplateData& IdeaCsp_view_data)
{
	drogon::OStringStream IdeaCsp_tmp_stream;
	std::string layoutName{""};
	IdeaCsp_tmp_stream << "<!DOCTYPE HTML>\n";
auto ideas = IdeaCsp_view_data.get<std::vector<std::pair<int,std::vector<std::unordered_map<std::string,std::string>>>>>("idea");
auto states = IdeaCsp_view_data.get<std::map<int,std::string>>("state");
{
    auto templ=DrTemplateBase::newTemplate("temphead");
    if(templ){
      IdeaCsp_tmp_stream<< templ->genText(IdeaCsp_view_data);
    }
}
IdeaCsp_tmp_stream<<"\n";
	IdeaCsp_tmp_stream << "<body>\n";
{
    auto templ=DrTemplateBase::newTemplate("tempbody");
    if(templ){
      IdeaCsp_tmp_stream<< templ->genText(IdeaCsp_view_data);
    }
}
IdeaCsp_tmp_stream<<"\n";
	IdeaCsp_tmp_stream << "<main>\n";
	IdeaCsp_tmp_stream << "<div class=\"container-fluid bg-secondary bg-opacity-10\">\n";
	IdeaCsp_tmp_stream << "<div class=\"container px-4 py-5\">\n";
 for(auto ideacard:ideas){
	IdeaCsp_tmp_stream << "<h2 class=\"pb-2 border-bottom text-center\">";
 IdeaCsp_tmp_stream<<states.at(ideacard.first);
	IdeaCsp_tmp_stream << "</h2>\n";
	IdeaCsp_tmp_stream << "<div class=\"row g-4 py-5 row-cols-1 row-cols-md-3 g-4\">\n";
 for(auto idea:ideacard.second){
	IdeaCsp_tmp_stream << "<div class=\"col\">\n";
	IdeaCsp_tmp_stream << "<div class=\"card\">\n";
	IdeaCsp_tmp_stream << "<div class=\"card-body\">\n";
	IdeaCsp_tmp_stream << "<h2 class=\"card-title\">";
 IdeaCsp_tmp_stream<<idea["chara"];
	IdeaCsp_tmp_stream << "</h2>\n";
	IdeaCsp_tmp_stream << "<p class=\"card-text\">";
 IdeaCsp_tmp_stream<<idea["explain"];
	IdeaCsp_tmp_stream << "</p>\n";
	IdeaCsp_tmp_stream << "</div>\n";
 if(true){
	IdeaCsp_tmp_stream << "<div class=\"card-footer text-muted\">";
 IdeaCsp_tmp_stream<<idea["deadline"];
	IdeaCsp_tmp_stream << "</div>\n";
	IdeaCsp_tmp_stream << "</div>\n";
 }
	IdeaCsp_tmp_stream << "</div>\n";
 }
	IdeaCsp_tmp_stream << "</div>\n";
 }
	IdeaCsp_tmp_stream << "</div>\n";
	IdeaCsp_tmp_stream << "</div>\n";
	IdeaCsp_tmp_stream << "</main>\n";
	IdeaCsp_tmp_stream << "<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\n";
	IdeaCsp_tmp_stream << "</body>\n";
	IdeaCsp_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(IdeaCsp_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = IdeaCsp_view_data;
auto str = std::move(IdeaCsp_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
